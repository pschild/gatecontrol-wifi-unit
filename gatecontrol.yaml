esphome:
  name: gatecontrol
  includes:
    - receiver_component.h
  libraries:
    - EspSoftwareSerial

esp8266:
  board: nodemcu

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:
  password: "b61b545797b9a0882fb3be31f5717bcc"

wifi:
  ssid: "FRITZ!Box 7560 EH"
  password: "11606865806396363926"
  manual_ip:
    static_ip: 192.168.178.48
    gateway: 192.168.178.1
    subnet: 255.255.255.0

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "gatecontrol Fallback Hotspot"
    password: "tPGCxDc7hYlA"

captive_portal:

custom_component:
  - lambda: |-
      auto receiver = new ReceiverComponent();
      return {receiver};
    components:
      - id: receiver

button:
  - platform: template
    name: Schalter Tor 1
    on_press:
      - lambda: |-
          ReceiverComponent *receiverComp = (ReceiverComponent*) id(receiver);
          receiverComp->triggerRelay1();
  - platform: template
    name: Schalter Tor 2
    on_press:
      - lambda: |-
          ReceiverComponent *receiverComp = (ReceiverComponent*) id(receiver);
          receiverComp->triggerRelay2();

binary_sensor:
  - platform: status
    name: Garage ESP Status
  - platform: custom
    lambda: |-
      ReceiverComponent *receiverComp = (ReceiverComponent*) id(receiver);
      return {
        receiverComp->sensorGate1,
        receiverComp->sensorGate2,
        receiverComp->sensorRelay1,
        receiverComp->sensorRelay2
      };
    binary_sensors:
    - name: Tor 1
      filters:
        - invert:
      device_class: garage_door
    - name: Tor 2
      filters:
        - invert:
      device_class: garage_door
    - name: Relais 1
      device_class: opening
    - name: Relais 2
      device_class: opening

sensor:
  - platform: uptime
    name: Uptime
  - platform: wifi_signal
    name: WLAN SignalstÃ¤rke
    update_interval: 60s
  - platform: custom
    lambda: |-
      ReceiverComponent *receiverComp = (ReceiverComponent*) id(receiver);
      return {
        receiverComp->heartbeatSensor
      };
    sensors:
    - name: Heartbeat

text_sensor:
  - platform: version
    name: "Firmware"

# switch:
#   - platform: custom
#     lambda: |-
#       ReceiverComponent *receiverComp = (ReceiverComponent*) id(receiver);
#       return {
#         receiverComp->relaisSwitch1,
#         receiverComp->relaisSwitch2
#       };
#     switches:
#     - name: Relay 1
#     - name: Relay 2